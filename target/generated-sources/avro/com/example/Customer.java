/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.example;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Customer extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 4595503166204312563L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Customer\",\"namespace\":\"com.example\",\"fields\":[{\"name\":\"first_name\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Firstname of customer\"},{\"name\":\"Last_name\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Lastname of customer\"},{\"name\":\"Customer_id\",\"type\":\"int\",\"doc\":\"customer information\"},{\"name\":\"plan\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Postpaid or prepaid plan\",\"default\":\"INACTIVE\"},{\"name\":\"automated_email\",\"type\":\"boolean\",\"doc\":\"optional based on the customer preference\",\"default\":true}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** Firstname of customer */
   private java.lang.String first_name;
  /** Lastname of customer */
   private java.lang.String Last_name;
  /** customer information */
   private int Customer_id;
  /** Postpaid or prepaid plan */
   private java.lang.String plan;
  /** optional based on the customer preference */
   private boolean automated_email;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Customer() {}

  /**
   * All-args constructor.
   * @param first_name Firstname of customer
   * @param Last_name Lastname of customer
   * @param Customer_id customer information
   * @param plan Postpaid or prepaid plan
   * @param automated_email optional based on the customer preference
   */
  public Customer(java.lang.String first_name, java.lang.String Last_name, java.lang.Integer Customer_id, java.lang.String plan, java.lang.Boolean automated_email) {
    this.first_name = first_name;
    this.Last_name = Last_name;
    this.Customer_id = Customer_id;
    this.plan = plan;
    this.automated_email = automated_email;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return first_name;
    case 1: return Last_name;
    case 2: return Customer_id;
    case 3: return plan;
    case 4: return automated_email;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: first_name = (java.lang.String)value$; break;
    case 1: Last_name = (java.lang.String)value$; break;
    case 2: Customer_id = (java.lang.Integer)value$; break;
    case 3: plan = (java.lang.String)value$; break;
    case 4: automated_email = (java.lang.Boolean)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'first_name' field.
   * @return Firstname of customer
   */
  public java.lang.String getFirstName() {
    return first_name;
  }


  /**
   * Gets the value of the 'Last_name' field.
   * @return Lastname of customer
   */
  public java.lang.String getLastName() {
    return Last_name;
  }


  /**
   * Gets the value of the 'Customer_id' field.
   * @return customer information
   */
  public java.lang.Integer getCustomerId() {
    return Customer_id;
  }


  /**
   * Gets the value of the 'plan' field.
   * @return Postpaid or prepaid plan
   */
  public java.lang.String getPlan() {
    return plan;
  }


  /**
   * Gets the value of the 'automated_email' field.
   * @return optional based on the customer preference
   */
  public java.lang.Boolean getAutomatedEmail() {
    return automated_email;
  }


  /**
   * Creates a new Customer RecordBuilder.
   * @return A new Customer RecordBuilder
   */
  public static com.example.Customer.Builder newBuilder() {
    return new com.example.Customer.Builder();
  }

  /**
   * Creates a new Customer RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Customer RecordBuilder
   */
  public static com.example.Customer.Builder newBuilder(com.example.Customer.Builder other) {
    return new com.example.Customer.Builder(other);
  }

  /**
   * Creates a new Customer RecordBuilder by copying an existing Customer instance.
   * @param other The existing instance to copy.
   * @return A new Customer RecordBuilder
   */
  public static com.example.Customer.Builder newBuilder(com.example.Customer other) {
    return new com.example.Customer.Builder(other);
  }

  /**
   * RecordBuilder for Customer instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Customer>
    implements org.apache.avro.data.RecordBuilder<Customer> {

    /** Firstname of customer */
    private java.lang.String first_name;
    /** Lastname of customer */
    private java.lang.String Last_name;
    /** customer information */
    private int Customer_id;
    /** Postpaid or prepaid plan */
    private java.lang.String plan;
    /** optional based on the customer preference */
    private boolean automated_email;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.example.Customer.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.first_name)) {
        this.first_name = data().deepCopy(fields()[0].schema(), other.first_name);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.Last_name)) {
        this.Last_name = data().deepCopy(fields()[1].schema(), other.Last_name);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.Customer_id)) {
        this.Customer_id = data().deepCopy(fields()[2].schema(), other.Customer_id);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.plan)) {
        this.plan = data().deepCopy(fields()[3].schema(), other.plan);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.automated_email)) {
        this.automated_email = data().deepCopy(fields()[4].schema(), other.automated_email);
        fieldSetFlags()[4] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing Customer instance
     * @param other The existing instance to copy.
     */
    private Builder(com.example.Customer other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.first_name)) {
        this.first_name = data().deepCopy(fields()[0].schema(), other.first_name);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.Last_name)) {
        this.Last_name = data().deepCopy(fields()[1].schema(), other.Last_name);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.Customer_id)) {
        this.Customer_id = data().deepCopy(fields()[2].schema(), other.Customer_id);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.plan)) {
        this.plan = data().deepCopy(fields()[3].schema(), other.plan);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.automated_email)) {
        this.automated_email = data().deepCopy(fields()[4].schema(), other.automated_email);
        fieldSetFlags()[4] = true;
      }
    }

    /**
      * Gets the value of the 'first_name' field.
      * Firstname of customer
      * @return The value.
      */
    public java.lang.String getFirstName() {
      return first_name;
    }

    /**
      * Sets the value of the 'first_name' field.
      * Firstname of customer
      * @param value The value of 'first_name'.
      * @return This builder.
      */
    public com.example.Customer.Builder setFirstName(java.lang.String value) {
      validate(fields()[0], value);
      this.first_name = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'first_name' field has been set.
      * Firstname of customer
      * @return True if the 'first_name' field has been set, false otherwise.
      */
    public boolean hasFirstName() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'first_name' field.
      * Firstname of customer
      * @return This builder.
      */
    public com.example.Customer.Builder clearFirstName() {
      first_name = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'Last_name' field.
      * Lastname of customer
      * @return The value.
      */
    public java.lang.String getLastName() {
      return Last_name;
    }

    /**
      * Sets the value of the 'Last_name' field.
      * Lastname of customer
      * @param value The value of 'Last_name'.
      * @return This builder.
      */
    public com.example.Customer.Builder setLastName(java.lang.String value) {
      validate(fields()[1], value);
      this.Last_name = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'Last_name' field has been set.
      * Lastname of customer
      * @return True if the 'Last_name' field has been set, false otherwise.
      */
    public boolean hasLastName() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'Last_name' field.
      * Lastname of customer
      * @return This builder.
      */
    public com.example.Customer.Builder clearLastName() {
      Last_name = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'Customer_id' field.
      * customer information
      * @return The value.
      */
    public java.lang.Integer getCustomerId() {
      return Customer_id;
    }

    /**
      * Sets the value of the 'Customer_id' field.
      * customer information
      * @param value The value of 'Customer_id'.
      * @return This builder.
      */
    public com.example.Customer.Builder setCustomerId(int value) {
      validate(fields()[2], value);
      this.Customer_id = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'Customer_id' field has been set.
      * customer information
      * @return True if the 'Customer_id' field has been set, false otherwise.
      */
    public boolean hasCustomerId() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'Customer_id' field.
      * customer information
      * @return This builder.
      */
    public com.example.Customer.Builder clearCustomerId() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'plan' field.
      * Postpaid or prepaid plan
      * @return The value.
      */
    public java.lang.String getPlan() {
      return plan;
    }

    /**
      * Sets the value of the 'plan' field.
      * Postpaid or prepaid plan
      * @param value The value of 'plan'.
      * @return This builder.
      */
    public com.example.Customer.Builder setPlan(java.lang.String value) {
      validate(fields()[3], value);
      this.plan = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'plan' field has been set.
      * Postpaid or prepaid plan
      * @return True if the 'plan' field has been set, false otherwise.
      */
    public boolean hasPlan() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'plan' field.
      * Postpaid or prepaid plan
      * @return This builder.
      */
    public com.example.Customer.Builder clearPlan() {
      plan = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'automated_email' field.
      * optional based on the customer preference
      * @return The value.
      */
    public java.lang.Boolean getAutomatedEmail() {
      return automated_email;
    }

    /**
      * Sets the value of the 'automated_email' field.
      * optional based on the customer preference
      * @param value The value of 'automated_email'.
      * @return This builder.
      */
    public com.example.Customer.Builder setAutomatedEmail(boolean value) {
      validate(fields()[4], value);
      this.automated_email = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'automated_email' field has been set.
      * optional based on the customer preference
      * @return True if the 'automated_email' field has been set, false otherwise.
      */
    public boolean hasAutomatedEmail() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'automated_email' field.
      * optional based on the customer preference
      * @return This builder.
      */
    public com.example.Customer.Builder clearAutomatedEmail() {
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    public Customer build() {
      try {
        Customer record = new Customer();
        record.first_name = fieldSetFlags()[0] ? this.first_name : (java.lang.String) defaultValue(fields()[0]);
        record.Last_name = fieldSetFlags()[1] ? this.Last_name : (java.lang.String) defaultValue(fields()[1]);
        record.Customer_id = fieldSetFlags()[2] ? this.Customer_id : (java.lang.Integer) defaultValue(fields()[2]);
        record.plan = fieldSetFlags()[3] ? this.plan : (java.lang.String) defaultValue(fields()[3]);
        record.automated_email = fieldSetFlags()[4] ? this.automated_email : (java.lang.Boolean) defaultValue(fields()[4]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
